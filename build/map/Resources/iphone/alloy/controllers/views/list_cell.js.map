{"version":3,"sources":["template.js","app/controllers/views/list_cell.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/Users/samueleast/Documents/Appcelerator_Studio_Workspace/OTNet/Resources/iphone/alloy/controllers/views/list_cell.js","sourceRoot":"/Users/samueleast/Documents/Appcelerator_Studio_Workspace/OTNet","sourcesContent":["var Alloy = require('/alloy'),\n\tBackbone = Alloy.Backbone,\n\t_ = Alloy._;\n\n\n\n\nfunction __processArg(obj, key) {\n\tvar arg = null;\n\tif (obj) {\n\t\targ = obj[key] || null;\n\t}\n\treturn arg;\n}\n\nfunction Controller() {\n\t\n\trequire('/alloy/controllers/' + 'BaseController').apply(this, Array.prototype.slice.call(arguments));\n\tthis.__controllerPath = 'views/list_cell';\n\tthis.args = arguments[0] || {};\n\n\tif (arguments[0]) {\n\t\tvar __parentSymbol = __processArg(arguments[0], '__parentSymbol');\n\t\tvar $model = __processArg(arguments[0], '$model');\n\t\tvar __itemTemplate = __processArg(arguments[0], '__itemTemplate');\n\t}\n\tvar $ = this;\n\tvar exports = {};\n\tvar __defers = {};\n\n\t// Generated code that must be executed before all UI and/or\n\t// controller code. One example is all model and collection\n\t// declarations from markup.\n\t\n\n\t// Generated UI code\n\t$.__views.cell = Ti.UI.createView(\n{top:10,left:10,width:Alloy.Globals.layout.lists.cell.width,height:Alloy.Globals.layout.lists.cell.height,backgroundColor:\"#333333\",clipMode:true,id:\"cell\",}\n);\n$.__views.cell && $.addTopLevelView($.__views.cell);\n$.__views.image = Ti.UI.createView(\n{top:Alloy.Globals.layout.lists.cell.imageTop,left:Alloy.Globals.layout.lists.cell.imageLeft,width:Alloy.Globals.layout.lists.cell.imageWidth,height:Alloy.Globals.layout.lists.cell.imageHeight,touchEnabled:false,id:\"image\",}\n);\n$.__views.cell.add($.__views.image);\n$.__views.imageview = Ti.UI.createImageView(\n{width:Alloy.Globals.layout.lists.cell.imageWidth,height:Alloy.Globals.layout.lists.cell.imageHeight,preventDefaultImage:true,touchEnabled:false,zIndex:0,id:\"imageview\",}\n);\n$.__views.image.add($.__views.imageview);\n$.__views.imageview1 = Ti.UI.createImageView(\n{width:Alloy.Globals.layout.lists.cell.imageWidth,height:Alloy.Globals.layout.lists.cell.imageHeight,preventDefaultImage:true,touchEnabled:false,zIndex:1,opacity:0,id:\"imageview1\",}\n);\n$.__views.image.add($.__views.imageview1);\n$.__views.__alloyId8 = Ti.UI.createView(\n{top:0,left:0,width:Ti.UI.FILL,height:Ti.UI.FILL,backgroundGradient:{type:\"linear\",startPoint:{x:\"0%\",y:\"0%\",},endPoint:{x:\"0%\",y:\"100%\",},colors:[{color:\"#33000000\",offset:0,},{color:\"#aa000000\",offset:1,},],},touchEnabled:false,id:\"__alloyId8\",}\n);\n$.__views.cell.add($.__views.__alloyId8);\n$.__views.title_label = Ti.UI.createLabel(\n{left:4,right:4,width:Ti.UI.FILL,height:Ti.UI.FILL,font:{fontSize:22,fontFamily:\"HelveticaNeue-Bold\",},textAlign:\"center\",color:\"#ffffff\",touchEnabled:false,id:\"title_label\",}\n);\n$.__views.cell.add($.__views.title_label);\n$.__views.overlay_view = Ti.UI.createView(\n{backgroundColor:\"#ffffff\",opacity:0,touchEnabled:false,id:\"overlay_view\",}\n);\n$.__views.cell.add($.__views.overlay_view);\nexports.destroy = function () {};\n\n\t// make all IDed elements in $.__views available right on the $ in a\n\t// controller's internal code. Externally the IDed elements will\n\t// be accessed with getView().\n\t_.extend($, $.__views);\n\n\t// Controller code directly from the developer's controller file\n\t__MAPMARKER_CONTROLLER_CODE__\n\n\t// Generated code that must be executed after all UI and\n\t// controller code. One example deferred event handlers whose\n\t// functions are not defined until after the controller code\n\t// is executed.\n\t\n\n\t// Extend the $ instance with all functions and properties\n\t// defined on the exports object.\n\t_.extend($, exports);\n}\n\nmodule.exports = Controller;\n","var alloyAnimation = require('alloy/animation'),\nanimation = require('/animation');\n\nvar _images = [];\nvar _currentImageIndex = 0;\nvar _currentImageView = 'imageview';\nvar _animationInterval;\n\n$.populateImages = function (images) {\n  _images = images;\n  $.imageview.image = _images[0];\n  Ti.API.debug('Images: ' + images);\n};\n\n$.animateImages = function () {\n\n  var nextImageIndex = _currentImageIndex >= _images.length - 1 ? 0 : _currentImageIndex + 1;\n  var nextImageView = _currentImageView == 'imageview' ? 'imageview1' : 'imageview';\n\n  $[_currentImageView].zIndex = 0;\n  $[nextImageView].opacity = 0;\n  $[nextImageView].zIndex = 1;\n  $[nextImageView].image = _images[nextImageIndex];\n\n  if (OS_IOS) {\n    $[nextImageView].animate({\n      opacity: 1,\n      duration: 1000 });\n\n  }\n  if (OS_WINDOWS) {\n    $[nextImageView].animate({\n      opacity: 1,\n      duration: 1000 });\n\n  }\n\n  _currentImageIndex = nextImageIndex;\n  _currentImageView = nextImageView;\n};\n\n$.animateClick = function (callback) {\n  animation.flash($.overlay_view, callback);\n};\n\nif (OS_ANDROID) {\n  $.imageview.addEventListener('load', function (e) {\n    $.imageview.animate({\n      opacity: 1,\n      duration: 1000 });\n\n  });\n\n  $.imageview1.addEventListener('load', function (e) {\n    $.imageview1.animate({\n      opacity: 1,\n      duration: 1000 });\n\n  });\n}\n\n$.title_label.addEventListener('postlayout', function (e) {\n  if ($.title_label.text.indexOf(' ') == -1) {\n    if (OS_IOS) {\n      $.title_label.minimumFontSize = $.title_label.font.size;\n    } else if (OS_ANDROID) {\n      $.title_label.wordWrap = false;\n    }\n  }\n});"]}