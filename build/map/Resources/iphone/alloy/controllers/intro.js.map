{"version":3,"sources":["template.js","app/controllers/intro.js"],"names":[],"mappingsfile":"/Users/samueleast/Documents/Appcelerator_Studio_Workspace/OTNet/Resources/iphone/alloy/controllers/intro.js","sourceRoot":"/Users/samueleast/Documents/Appcelerator_Studio_Workspace/OTNet","sourcesContent":["var Alloy = require('/alloy'),\n\tBackbone = Alloy.Backbone,\n\t_ = Alloy._;\n\n\n\n\nfunction __processArg(obj, key) {\n\tvar arg = null;\n\tif (obj) {\n\t\targ = obj[key] || null;\n\t}\n\treturn arg;\n}\n\nfunction Controller() {\n\t\n\trequire('/alloy/controllers/' + 'BaseController').apply(this, Array.prototype.slice.call(arguments));\n\tthis.__controllerPath = 'intro';\n\tthis.args = arguments[0] || {};\n\n\tif (arguments[0]) {\n\t\tvar __parentSymbol = __processArg(arguments[0], '__parentSymbol');\n\t\tvar $model = __processArg(arguments[0], '$model');\n\t\tvar __itemTemplate = __processArg(arguments[0], '__itemTemplate');\n\t}\n\tvar $ = this;\n\tvar exports = {};\n\tvar __defers = {};\n\n\t// Generated code that must be executed before all UI and/or\n\t// controller code. One example is all model and collection\n\t// declarations from markup.\n\t\n\n\t// Generated UI code\n\t$.__views.window = Ti.UI.createWindow(\n{id:\"window\",}\n);\n$.__views.window && $.addTopLevelView($.__views.window);\n$.__views.clapper_top_container = Ti.UI.createView(\n{top:Alloy.Globals.layout.intro.clapperTopContainerTop,left:Alloy.Globals.layout.intro.clapperTopContainerLeft,height:62,width:200,id:\"clapper_top_container\",}\n);\n$.__views.window.add($.__views.clapper_top_container);\n$.__views.clapper_top = Ti.UI.createImageView(\n{top:0,left:100,width:100,height:31,id:\"clapper_top\",image:\"/clapper_top.png\",}\n);\n$.__views.clapper_top_container.add($.__views.clapper_top);\n$.__views.clapper_bottom = Ti.UI.createImageView(\n{top:Alloy.Globals.layout.intro.clapperBottomTop,left:Alloy.Globals.layout.intro.clapperBottomLeft,width:100,height:55,id:\"clapper_bottom\",image:\"/clapper_bottom.png\",}\n);\n$.__views.window.add($.__views.clapper_bottom);\n$.__views.activity_indicator = Ti.UI.createActivityIndicator(\n{style:Ti.UI.ActivityIndicatorStyle.BIG,height:Ti.UI.SIZE,width:Ti.UI.SIZE,color:\"#ff0000\",top:Alloy.Globals.layout.intro.activityViewTop,id:\"activity_indicator\",}\n);\n$.__views.window.add($.__views.activity_indicator);\nexports.destroy = function () {};\n\n\t// make all IDed elements in $.__views available right on the $ in a\n\t// controller's internal code. Externally the IDed elements will\n\t// be accessed with getView().\n\t_.extend($, $.__views);\n\n\t// Controller code directly from the developer's controller file\n\t__MAPMARKER_CONTROLLER_CODE__\n\n\t// Generated code that must be executed after all UI and\n\t// controller code. One example deferred event handlers whose\n\t// functions are not defined until after the controller code\n\t// is executed.\n\t\n\n\t// Extend the $ instance with all functions and properties\n\t// defined on the exports object.\n\t_.extend($, exports);\n}\n\nmodule.exports = Controller;\n","var _animateOutOnComplete = false;\nvar _animationComplete = false;\nvar _callback;\n\n/**\n                * Init, called on window open event\n                */\nfunction init() {\n\n  $.window.removeEventListener('open', init);\n\n  var animation = Ti.UI.createAnimation({\n    transform: Ti.UI.create2DMatrix({ rotate: -10 }),\n    curve: Ti.UI.ANIMATION_CURVE_EASE_IN,\n    duration: 1000 });\n\n  animation.addEventListener('complete', function (e) {\n    var animation = Ti.UI.createAnimation({\n      transform: Ti.UI.create2DMatrix({ rotate: 11.3 }),\n      duration: 200 });\n\n    animation.addEventListener('complete', function (e) {\n      _animationComplete = true;\n      if (_animateOutOnComplete) {\n        animateOut();\n      } else {\n        $.activity_indicator.show();\n      }\n    });\n    $.clapper_top_container.animate(animation);\n  });\n  $.clapper_top_container.animate(animation);\n\n}\n\n/**\n   * Animate out content and callback\n   */\nfunction animateOut() {\n  $.activity_indicator.hide();\n\n  var animation = Ti.UI.createAnimation({\n    transform: Ti.UI.create2DMatrix({ scale: 0.7 }),\n    opacity: 0,\n    duration: 1000 });\n\n  animation.addEventListener('complete', _callback);\n  $.window.animate(animation);\n}\n\n/**\n   * End intro once animation has completed\n   * @param {Object} callback\n   */\n$.endIntro = function (callback) {\n  _callback = callback;\n  _animateOutOnComplete = true;\n  if (_animationComplete) {\n    animateOut();\n  }\n};\n\n\n///////////////////////////////////////////////////////////////////////////////\n//\n// event handlers\n//\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * window open\n */\n$.window.addEventListener('open', init);"]}