{"version":3,"sources":["template.js","app/controllers/home.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACneA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/Users/samueleast/Documents/Appcelerator_Studio_Workspace/OTNet/Resources/iphone/alloy/controllers/home.js","sourceRoot":"/Users/samueleast/Documents/Appcelerator_Studio_Workspace/OTNet","sourcesContent":["var Alloy = require('/alloy'),\n\tBackbone = Alloy.Backbone,\n\t_ = Alloy._;\n\n\n\n\nfunction __processArg(obj, key) {\n\tvar arg = null;\n\tif (obj) {\n\t\targ = obj[key] || null;\n\t}\n\treturn arg;\n}\n\nfunction Controller() {\n\t\n\trequire('/alloy/controllers/' + 'BaseController').apply(this, Array.prototype.slice.call(arguments));\n\tthis.__controllerPath = 'home';\n\tthis.args = arguments[0] || {};\n\n\tif (arguments[0]) {\n\t\tvar __parentSymbol = __processArg(arguments[0], '__parentSymbol');\n\t\tvar $model = __processArg(arguments[0], '$model');\n\t\tvar __itemTemplate = __processArg(arguments[0], '__itemTemplate');\n\t}\n\tvar $ = this;\n\tvar exports = {};\n\tvar __defers = {};\n\n\t// Generated code that must be executed before all UI and/or\n\t// controller code. One example is all model and collection\n\t// declarations from markup.\n\t\n\n\t// Generated UI code\n\t$.__views.window = Ti.UI.createWindow(\n{backgroundColor:\"black\",extendEdges:Titanium.UI.EXTEND_EDGE_TOP,navBarHidden:true,orientationModes:[Ti.UI.PORTRAIT,],id:\"window\",title:\"Movies\",}\n);\n$.__views.window && $.addTopLevelView($.__views.window);\n$.__views.container = Ti.UI.createView(\n{top:-70,left:0,width:Ti.UI.FILL,height:Ti.UI.FILL,id:\"container\",}\n);\n$.__views.window.add($.__views.container);\n$.__views.search_textfield = Ti.UI.createTextField(\n{top:30,left:10,right:10,height:40,padding:{right:10,left:40,},color:\"#ffffff\",autocapitalization:true,autocorrect:false,returnKeyType:Titanium.UI.RETURNKEY_SEARCH,enableReturnKey:true,hintText:\"Search\",borderColor:\"#b0332a\",borderWidth:1,backgroundColor:\"#260205\",keyboardAppearance:Ti.UI.KEYBOARD_APPEARANCE_DARK,clearButtonMode:Ti.UI.INPUT_BUTTONMODE_ONFOCUS,id:\"search_textfield\",}\n);\n$.__views.container.add($.__views.search_textfield);\n$.__views.search_icon = Ti.UI.createImageView(\n{top:40,left:20,width:20,height:20,image:\"/search_icon.png\",id:\"search_icon\",}\n);\n$.__views.container.add($.__views.search_icon);\n$.__views.lists_container = Ti.UI.createScrollView(\n{top:70,left:0,width:Ti.UI.FILL,height:Ti.UI.FILL,contentWidth:\"auto\",contentHeight:\"auto\",scrollType:\"vertical\",opacity:0,id:\"lists_container\",zIndex:100,}\n);\n$.__views.container.add($.__views.lists_container);\n$.__views.searchCell = Alloy.createController('views/list_static_cell',{id:\"searchCell\",__parentSymbol:$.__views.lists_container,});\n$.__views.searchCell.setParent($.__views.lists_container);\n$.__views.authCell = Alloy.createController('views/list_static_cell',{id:\"authCell\",__parentSymbol:$.__views.lists_container,});\n$.__views.authCell.setParent($.__views.lists_container);\nif ((OS_IOS)) {\n$.__views.settingsCell = Alloy.createController('views/list_static_cell',{id:\"settingsCell\",__parentSymbol:$.__views.lists_container,});\n$.__views.settingsCell.setParent($.__views.lists_container);\n}\n$.__views.search_overlay = Ti.UI.createView(\n{top:70,left:0,width:Ti.UI.FILL,height:Ti.UI.FILL,backgroundColor:\"#99000000\",id:\"search_overlay\",zIndex:0,}\n);\n$.__views.container.add($.__views.search_overlay);\n$.__views.activity_indicator = Ti.UI.createActivityIndicator(\n{style:Ti.UI.ActivityIndicatorStyle.BIG,height:Ti.UI.SIZE,width:Ti.UI.SIZE,color:\"#ff0000\",id:\"activity_indicator\",}\n);\n$.__views.container.add($.__views.activity_indicator);\nif ((OS_IOS)) {\n$.__views.navbar = Alloy.createController('views/navbar',{id:\"navbar\",__parentSymbol:$.__views.window,});\n$.__views.navbar.setParent($.__views.window);\n}\nexports.destroy = function () {};\n\n\t// make all IDed elements in $.__views available right on the $ in a\n\t// controller's internal code. Externally the IDed elements will\n\t// be accessed with getView().\n\t_.extend($, $.__views);\n\n\t// Controller code directly from the developer's controller file\n\t__MAPMARKER_CONTROLLER_CODE__\n\n\t// Generated code that must be executed after all UI and\n\t// controller code. One example deferred event handlers whose\n\t// functions are not defined until after the controller code\n\t// is executed.\n\t\n\n\t// Extend the $ instance with all functions and properties\n\t// defined on the exports object.\n\t_.extend($, exports);\n}\n\nmodule.exports = Controller;\n","var api = require('apiService');\nvar Data = require(\"/data\");\n\nif (OS_IOS) {\n  var CoreMotion = require(\"ti.coremotion\");\n  var DeviceMotion = CoreMotion.createDeviceMotion();\n}\n\nvar args = arguments[0] || {};\nvar loaded_callback = args.loaded_callback;\n\nvar lists = [];\nvar genres = [];\nvar cells = [];\nvar image_animation_interval = null;\nvar displaying_overlay = false;\nvar overlay_controller;\nvar android_back_event_listener;\nvar displaying_search = false;\nvar cellOffset = OS_IOS ? 20 : 0;\n\n/**\n                                   * init\n                                   */\nfunction init() {\n\n  configureStaticCells();\n\n  getConfig();\n  getLists();\n\n  // not required when loading local data\n  // $.activity_indicator.show();\n\n  if (OS_IOS) {\n    $.navbar.back_button.hide();\n  }\n\n  if (OS_ANDROID) {\n    $.window.addEventListener('open', function (e) {\n      $.search_textfield.hide();\n    });\n  }\n}\ninit();\n\n/**\n         * get configuration\n         */\nfunction getConfig() {\n\n  Data.get_config(function (error, e) {\n    if (!error) {\n      Alloy.Globals.setBackdropImageSize(e.images.backdrop_sizes);\n      Alloy.Globals.setPosterImageSize(e.images.poster_sizes);\n    } else {\n      // handle error\n    }\n  });\n}\n\n/**\n   * get movie collections and populate\n   */\nfunction getLists() {\n\n  api.getService({\n    endpoint: '/v1/taxonomies/' + Alloy.Globals.playlistsId + '/terms' },\n  function (_response) {\n\n    if (_response.status) {\n\n      lists = _response.data;\n      populateLists(lists, 'list', 0, cellOffset + Alloy.Globals.layout.lists.cell.height + 20);\n      getGenres();\n\n    } else {\n\n      alert(_response.message);\n\n    }\n\n  });\n\n}\n\n/**\n   * get movie genres and populate\n   * - animates in content once populated\n   */\nfunction getGenres() {\n\n  api.getService({\n    endpoint: '/v1/taxonomies/' + Alloy.Globals.genresId + '/terms' },\n  function (_response) {\n\n    if (_response.status) {\n\n      genres = _response.data;\n      populateLists(genres, 'genre', lists.length, cellOffset + 40 + Alloy.Globals.layout.lists.cell.height);\n      loaded_callback();\n\n    } else {\n\n      alert(_response.message);\n\n    }\n\n  });\n\n}\n\nfunction configureStaticCells() {\n\n  $.searchCell.updateViews({\n    \"#cell\": {\n      top: cellOffset,\n      left: 10 },\n\n    \"#title_label\": {\n      text: \"\\uf002\" } });\n\n\n\n  $.authCell.updateViews({\n    \"#cell\": {\n      top: cellOffset,\n      left: 10 + (Alloy.Globals.layout.lists.cell.width + 10),\n      height: OS_IOS ? (Alloy.Globals.layout.lists.cell.height - 10) / 2 : Alloy.Globals.layout.lists.cell.height },\n\n    \"#title_label\": {\n      text: \"\\uf007\" } });\n\n\n\n  if (OS_IOS) {\n    $.settingsCell.updateViews({\n      \"#cell\": {\n        top: cellOffset + (Alloy.Globals.layout.lists.cell.height - 10) / 2 + 10,\n        left: 10 + (Alloy.Globals.layout.lists.cell.width + 10),\n        height: (Alloy.Globals.layout.lists.cell.height - 10) / 2 },\n\n      \"#title_label\": {\n        text: \"\\uf013\" } });\n\n\n  }\n}\n\n/**\n   * populate lists\n   */\nfunction populateLists(lists, type, cellOffset, yOffset) {\n\n  for (var i = 0, num_lists = lists.length; i < num_lists; i++) {\n\n    var list = lists[i];\n    var idx = i + cellOffset;\n    var cell_x = 10 + (Alloy.Globals.layout.lists.cell.width + 10) * (idx % 2);\n    var cell_y = yOffset + (Alloy.Globals.layout.lists.cell.height + 10) * Math.floor(idx / 2);\n\n    var cell = Alloy.createController(\"/views/list_cell\");\n    cell.updateViews({\n      \"#cell\": {\n        top: cell_y,\n        left: cell_x },\n\n      \"#title_label\": {\n        text: list.title.toUpperCase() } });\n\n\n\n    var images = [];\n    _.each(list.images, function (path) {\n\n      if (path != null) {\n\n        images.push(path.src800x800);\n\n      }\n    });\n\n    images = _.chain(images).shuffle().first(5).value();\n    cell.populateImages(images);\n\n    (function (cell, index) {\n\n      cell.getView().addEventListener(\"click\", function (e) {\n\n        $.lists_container.touchEnabled = false;\n\n        cell.animateClick(function () {\n\n          if (type == 'list') {\n            openList(lists[index]);\n          } else if (type == 'genre') {\n            openGenre(genres[index]);\n          }\n\n          setTimeout(function () {\n            $.lists_container.touchEnabled = true;\n          }, 1000);\n\n        });\n      });\n\n    })(cell, i);\n\n    cells.push(cell);\n    $.lists_container.add(cell.getView());\n    var contentHeight = cell_y + Alloy.Globals.layout.lists.cell.height + 10;\n    if (OS_ANDROID) {\n      contentHeight = Alloy.Globals.dpToPx(contentHeight);\n    }\n    $.lists_container.contentHeight = contentHeight;\n  }\n}\n\nfunction startAnimatingImages() {\n  if (cells.length > 0 && !image_animation_interval) {\n    image_animation_interval = setInterval(animateImages, 5000);\n  }\n}\n\nfunction stopAnimatingImages() {\n  clearInterval(image_animation_interval);\n  image_animation_interval = null;\n}\n\nfunction animateImages() {\n  _.each(cells, function (cell, index) {\n    setTimeout(function () {\n      animateCellImages(cell);\n    }, index * 100);\n  });\n}\n\nfunction animateCellImages(cell) {\n\n  var cellTop = cell.getView().rect.y;\n  var cellBottom = cell.getView().rect.y + cell.getView().rect.height;\n  var visibleTop = $.lists_container.contentOffset.y;\n  if (OS_ANDROID) {\n    visibleTop = Alloy.Globals.pxToDp(visibleTop);\n  }\n  var visibleBottom = visibleTop + $.lists_container.rect.height;\n\n  var isVisible = cellTop < visibleBottom && cellBottom > visibleTop;\n\n  if (isVisible) {\n    cell.animateImages();\n  }\n}\n\n/**\n   * add cell separator line\n   */\nfunction addCellSeparator(offset) {\n  var view = Ti.UI.createView({\n    top: offset,\n    left: 10,\n    right: 10,\n    height: 0.5,\n    backgroundColor: '#b0332a' });\n\n  $.lists_container.add(view);\n}\n\n/**\n   * animate in view\n   */\n$.animateIn = function () {\n  $.activity_indicator.hide();\n\n  var offset = cellOffset + Alloy.Globals.layout.lists.cell.height;\n  if (OS_ANDROID) {\n    offset = Alloy.Globals.dpToPx(offset + 20);\n  }\n  $.lists_container.setContentOffset({ x: 0, y: offset }, false);\n\n  $.lists_container.animate(Ti.UI.createAnimation({\n    opacity: 1,\n    duration: 1000 }));\n\n\n  startAnimatingImages();\n\n};\n\n/**\n    * open list\n    */\nfunction openList(data) {\n\n  Alloy.Globals.Navigator.push(\"movies_list\",\n  {\n    type: 'list',\n    id: data.id,\n    title: data.title });\n\n\n}\n\n/**\n   * open genre\n   */\nfunction openGenre(data) {\n\n  Alloy.Globals.Navigator.push(\"movies_list\",\n  {\n    type: 'genre',\n    id: data.id,\n    title: data.title });\n\n\n}\n\n/**\n   * show overlay controller\n   */\nfunction showOverlay(controller, options) {\n  overlay_controller = Alloy.createController('/' + controller, options);\n  var view = overlay_controller.getView();\n  if (OS_IOS) view.transform = Ti.UI.createMatrix2D({ scale: 2.0 });\n  $.window.add(view);\n\n  var cells_animation = Ti.UI.createAnimation({\n    transform: Ti.UI.createMatrix2D({ scale: 0.7 }),\n    opacity: 0.5,\n    curve: Ti.UI.ANIMATION_CURVE_EASE_OUT,\n    duration: 500 });\n\n  $.lists_container.animate(cells_animation);\n\n  var view_animation = Ti.UI.createAnimation({\n    transform: Ti.UI.createMatrix2D({ scale: 1 }),\n    opacity: 1,\n    curve: Ti.UI.ANIMATION_CURVE_EASE_OUT,\n    duration: 500,\n    delay: 100 });\n\n  view.animate(view_animation);\n\n  overlay_controller.getView().addEventListener(\"click\", hideOverlay);\n\n  displaying_overlay = true;\n\n  if (OS_ANDROID) {\n    android_back_event_listener = function (e) {\n      hideOverlay();\n    };\n\n    $.window.addEventListener('androidback', android_back_event_listener);\n  }\n}\n\n/**\n   * hide overlay controller\n   */\nfunction hideOverlay() {\n\n  var view = overlay_controller.getView();\n  view.removeEventListener(\"click\", hideOverlay);\n  var view_animation = Ti.UI.createAnimation({\n    transform: Ti.UI.createMatrix2D({ scale: 2.0 }),\n    opacity: 0,\n    curve: Ti.UI.ANIMATION_CURVE_EASE_OUT,\n    duration: 500 });\n\n  view.animate(view_animation);\n  view_animation.addEventListener('complete', function (e) {\n    $.window.remove(view);\n    overlay_controller.destroy();\n    overlay_controller = null;\n  });\n\n  var animation = Ti.UI.createAnimation({\n    transform: Ti.UI.createMatrix2D({ scale: 1.0 }),\n    opacity: 1,\n    curve: Ti.UI.ANIMATION_CURVE_EASE_OUT,\n    duration: 500,\n    delay: 100 });\n\n  $.lists_container.animate(animation);\n\n  displaying_overlay = false;\n\n  if (OS_ANDROID) {\n    $.window.removeEventListener('androidback', android_back_event_listener);\n  }\n}\n\nfunction displaySearch() {\n  if (OS_ANDROID) {\n    $.search_textfield.show();\n  }\n\n  displaying_search = true;\n  $.lists_container.scrollEnabled = false;\n  $.lists_container.contentOffset = { x: 0, y: 0 };\n  $.search_overlay.zIndex = 101;\n  $.search_textfield.focus();\n\n  $.container.animate({\n    top: 0,\n    duration: 250 });\n\n}\n\n/**\n   * hide search and reset list scroll offset\n   */\nfunction hideSearch() {\n  displaying_search = false;\n  $.search_overlay.zIndex = 0;\n  $.lists_container.scrollEnabled = true;\n  $.search_textfield.blur();\n  $.search_textfield.value = '';\n\n  var animation = Ti.UI.createAnimation({\n    top: -70,\n    duration: 250 });\n\n  if (OS_ANDROID) {\n    animation.addEventListener('complete', function (e) {\n      $.search_textfield.hide();\n    });\n  }\n  $.container.animate(animation);\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//\n// event handlers\n//\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * scrollview scroll event handler\n */\nif (OS_IOS) {\n  $.lists_container.addEventListener('scroll', function (e) {\n    var offset = e.y;\n    $.navbar.background_view.opacity = Math.max(Math.min(offset / (cellOffset / 2), 1), 0);\n  });\n}\n\n/**\n   * search overlay click event handler\n   */\n$.search_overlay.addEventListener('click', function (e) {\n  hideSearch();\n});\n\n/**\n     * search textfield return event handler\n     */\n$.search_textfield.addEventListener('return', function (e) {\n  Alloy.Globals.Navigator.push(\"movies_list\", {\n    type: 'search',\n    query: e.value });\n\n\n  setTimeout(function () {\n    hideSearch();\n  }, 1000);\n});\n\n$.searchCell.getView().addEventListener(\"click\", function (e) {\n  $.lists_container.touchEnabled = false;\n  $.searchCell.animateClick(function () {\n\n    displaySearch();\n\n    setTimeout(function () {\n\n      $.lists_container.touchEnabled = true;\n\n    }, 1000);\n\n  });\n});\n\nfunction handleStaticCellClick(cell, overlay) {\n  $.lists_container.touchEnabled = false;\n  cell.animateClick(function () {\n\n    showOverlay(overlay);\n\n    setTimeout(function () {\n\n      $.lists_container.touchEnabled = true;\n\n    }, 1000);\n\n  });\n}\n\n$.authCell.getView().addEventListener(\"click\", function (e) {\n\n  Alloy.Globals.Navigator.push(\"auth\", {});\n\n});\n\n/**\n     * iOS only: settings button click event handler\n     */\nif (OS_IOS) {\n  $.settingsCell.getView().addEventListener(\"click\", function (e) {\n    handleStaticCellClick($.settingsCell, 'settings');\n  });\n}\n\n/**\n   *\n   * iOS only: Core motion for list parallax effect\n   *\n   * - motion updates are listened for when property is set, app is active and window is visisble\n   *\n   */\nif (OS_IOS) {\n\n  Ti.App.addEventListener(Alloy.Globals.EVENT_PROPERTY_ENABLE_MOTION_ANIMATION_DID_CHANGE, registerForMotionUpdates);\n\n  $.window.addEventListener('focus', function (e) {\n    startAnimatingImages();\n    registerForMotionUpdates();\n    Ti.App.addEventListener('resume', registerForMotionUpdates);\n    Ti.App.addEventListener('pause', unregisterForMotionUpdates);\n  });\n\n  $.window.addEventListener('blur', function (e) {\n    stopAnimatingImages();\n    unregisterForMotionUpdates();\n    Ti.App.removeEventListener('resume', registerForMotionUpdates);\n    Ti.App.removeEventListener('pause', unregisterForMotionUpdates);\n  });\n\n  function registerForMotionUpdates() {\n\n    if (!Ti.App.Properties.getBool(Alloy.Globals.PROPERTY_ENABLE_MOTION_ANIMATION)) {\n      unregisterForMotionUpdates();\n      return;\n    }\n\n    if (DeviceMotion.isDeviceMotionAvailable() && !DeviceMotion.isDeviceMotionActive()) {\n      DeviceMotion.setDeviceMotionUpdateInterval(50);\n      DeviceMotion.startDeviceMotionUpdates(function (e) {\n        if (e.success) {\n          // Ti.API.info(\"picth: \" + e.attitude.pitch);\n          // Ti.API.info(\"roll: \" + e.attitude.roll);\n          // Ti.API.info(\"yaw: \" + e.attitude.yaw);\n\n          var imageTop = Alloy.Globals.layout.lists.cell.imageTop + 15 * e.attitude.pitch;\n          var imageLeft = Alloy.Globals.layout.lists.cell.imageLeft + 15 * e.attitude.roll;\n\n          for (var i = 0, num_cells = cells.length; i < num_cells; i++) {\n\n            var cell = cells[i];\n            cell.updateViews({\n              \"#image\": {\n                top: imageTop,\n                left: imageLeft } });\n\n\n          }\n        }\n      });\n    }\n  }\n\n  function unregisterForMotionUpdates() {\n    if (DeviceMotion.isDeviceMotionActive()) {\n      DeviceMotion.stopDeviceMotionUpdates();\n    }\n  }\n}"]}